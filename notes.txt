http://expressjs.com/en/guide/writing-middleware.html

Why middlewares are important?
Middlewares are important because they are able to reach requests and response before sending anything to user.
Middleware functions are functions that have access to the request object (req), the response object (res), 
and the next function in the applicationâ€™s request-response cycle. 
The next function is a function in the Express router which, when invoked, executes the middleware succeeding the current middleware.

Middleware functions can perform the following tasks:
1. Execute any code.
2. Make changes to the request and the response objects.
3. End the request-response cycle.
4. Call the next middleware in the stack.

If the current middleware function does not end the request-response cycle, 
it must call next() to pass control to the next middleware function. Otherwise, the request will be left hanging.

The order of middleware loading is important: middleware functions that are loaded first are also executed first.

ERROR HANDLING USING MIDDLEWARE:
app.use((err, req, res, next) => {})
To handle error using middleware, the function will take all 4 parameters [4 parameters are necessary, and in the same order.]
